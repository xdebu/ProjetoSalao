// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoSalaoAPI.Models;

namespace ProjetoSalaoAPI.Migrations
{
    [DbContext(typeof(ProjetoSalaoAPIContext))]
    [Migration("20190816000747_Todas_tabelas_Correto")]
    partial class Todas_tabelas_Correto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCad");

                    b.Property<DateTime>("DataReserva");

                    b.Property<int?>("FuncionarioId");

                    b.Property<int?>("PessoasId");

                    b.Property<int?>("UsuCadIdUsuar");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("PessoasId");

                    b.HasIndex("UsuCadIdUsuar");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.AgendaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AgendaId");

                    b.Property<int?>("ProdServId");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("ProdServId");

                    b.ToTable("AgendaItem");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Alerta");

                    b.Property<int>("CodBarra");

                    b.Property<DateTime>("DataCad");

                    b.Property<DateTime>("DataPagto");

                    b.Property<int>("NrDocum");

                    b.Property<int?>("UsuCadIdUsuar");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("UsuCadIdUsuar");

                    b.ToTable("Boleto");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.BoletoVenc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BoletoId");

                    b.Property<DateTime>("DataVencto");

                    b.Property<int>("NrParcela");

                    b.Property<double>("ValorParcela");

                    b.HasKey("Id");

                    b.HasIndex("BoletoId");

                    b.ToTable("BoletoVenc");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAbertura");

                    b.Property<DateTime>("DataFechamento");

                    b.Property<double>("Saldo");

                    b.Property<int?>("UsuAberturaIdUsuar");

                    b.Property<int?>("UsuFechamentoIdUsuar");

                    b.Property<double>("ValorCred");

                    b.Property<double>("ValorDeb");

                    b.HasKey("Id");

                    b.HasIndex("UsuAberturaIdUsuar");

                    b.HasIndex("UsuFechamentoIdUsuar");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Comissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCad");

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataIni");

                    b.Property<int?>("FuncionarioId");

                    b.Property<double>("TxComissao");

                    b.Property<int?>("UsuCadIdUsuar");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("UsuCadIdUsuar");

                    b.ToTable("Comissao");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("PessoaId");

                    b.Property<int>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.ItemLanc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("LancamentoId");

                    b.Property<int?>("ProdServId");

                    b.Property<double>("Quantidade");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("LancamentoId");

                    b.HasIndex("ProdServId");

                    b.ToTable("ItemLanc");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("DataLanc");

                    b.Property<int?>("FuncionarioId");

                    b.Property<int?>("UsuCadIdUsuar");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("UsuCadIdUsuar");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataMovim");

                    b.Property<int?>("ItemLancId");

                    b.Property<int>("Tipo");

                    b.Property<int?>("UsuMovimIdUsuar");

                    b.HasKey("Id");

                    b.HasIndex("ItemLancId");

                    b.HasIndex("UsuMovimIdUsuar");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Pessoas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cpf");

                    b.Property<DateTime>("DataAtu");

                    b.Property<DateTime>("DataCad");

                    b.Property<DateTime>("DataNasc");

                    b.Property<string>("Nome");

                    b.Property<int>("Tipo");

                    b.Property<int?>("UsuAtuIdUsuar");

                    b.HasKey("Id");

                    b.HasIndex("UsuAtuIdUsuar");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.ProdServ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAtu");

                    b.Property<string>("Descricao");

                    b.Property<double>("QtdeEstoque");

                    b.Property<int>("Tipo");

                    b.Property<int?>("UsuAtuIdUsuar");

                    b.Property<double>("ValorUnit");

                    b.HasKey("Id");

                    b.HasIndex("UsuAtuIdUsuar");

                    b.ToTable("ProdServ");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuar")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Senha");

                    b.Property<int>("TipoUsuario");

                    b.HasKey("IdUsuar");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Agenda", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Pessoas")
                        .WithMany()
                        .HasForeignKey("PessoasId");

                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuCad")
                        .WithMany()
                        .HasForeignKey("UsuCadIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.AgendaItem", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Agenda", "Agenda")
                        .WithMany("AgendaItem")
                        .HasForeignKey("AgendaId");

                    b.HasOne("ProjetoSalaoAPI.Models.ProdServ", "ProdServ")
                        .WithMany()
                        .HasForeignKey("ProdServId");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Boleto", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuCad")
                        .WithMany()
                        .HasForeignKey("UsuCadIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.BoletoVenc", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Boleto", "Boleto")
                        .WithMany("BoletoVenc")
                        .HasForeignKey("BoletoId");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Caixa", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuAbertura")
                        .WithMany()
                        .HasForeignKey("UsuAberturaIdUsuar");

                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuFechamento")
                        .WithMany()
                        .HasForeignKey("UsuFechamentoIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Comissao", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuCad")
                        .WithMany()
                        .HasForeignKey("UsuCadIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Contato", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.ItemLanc", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Lancamento", "Lancamento")
                        .WithMany("ItemLanc")
                        .HasForeignKey("LancamentoId");

                    b.HasOne("ProjetoSalaoAPI.Models.ProdServ", "ProdServ")
                        .WithMany()
                        .HasForeignKey("ProdServId");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Lancamento", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ProjetoSalaoAPI.Models.Pessoas", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuCad")
                        .WithMany()
                        .HasForeignKey("UsuCadIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Movimentacao", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.ItemLanc", "ItemLanc")
                        .WithMany()
                        .HasForeignKey("ItemLancId");

                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuMovim")
                        .WithMany()
                        .HasForeignKey("UsuMovimIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.Pessoas", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuAtu")
                        .WithMany()
                        .HasForeignKey("UsuAtuIdUsuar");
                });

            modelBuilder.Entity("ProjetoSalaoAPI.Models.ProdServ", b =>
                {
                    b.HasOne("ProjetoSalaoAPI.Models.Usuario", "UsuAtu")
                        .WithMany()
                        .HasForeignKey("UsuAtuIdUsuar");
                });
#pragma warning restore 612, 618
        }
    }
}
